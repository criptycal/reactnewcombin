import React from "react";
import { trpc } from "../utils/trpc";
import Head from "next/head";
import { TrashIcon, PencilIcon } from '@heroicons/react/outline';
import { yupResolver } from '@hookform/resolvers/yup';
import * as yup from 'yup';
import { useForm, SubmitHandler } from 'react-hook-form';


type ListProps = {
    filter: string;
}
const schema = yup.object({
    id: yup.string().required()
})

export default function PayablesList({ filter }: ListProps) {

    const {register, handleSubmit, formState: {errors}, reset} = useForm({
        resolver: yupResolver(schema)
    })

    const utils = trpc.useContext();

    const deletePayable = trpc.useMutation('payables.delete', {
        async onSuccess () {
            console.log('Payable deleted');
            await utils.invalidateQueries('payables.getAll');
            alert('Payable deleted');
            reset();
        },
        async onError(error){
            console.log(error);
            alert('Error deleting Payable');
            reset();
        }
    });


    const onDelete = handleSubmit (async data => {
        const input = {
            id: data.id
        }
        await deletePayable.mutateAsync(input);
    })


    if (filter === 'All') {
        const payables = trpc.useQuery(["payables.getAll"]);
        if (!payables.data?.length) {
            return (
                <>
                    <Head>
                        <title>Payables | NewCombin Challenge</title>
                        <meta name="description" content="Generated by create-t3-app" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>


                    <div className="flex justify-center items-center h-screen">
                        <div className="w-full max-w-md">

                            <div className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
                                <div className="mb-4">
                                    <h1 className="text-2xl font-bold text-center">
                                        No hay datos...
                                    </h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </>
            )
        }
        return (
            <>
                <Head>
                    <title>Payables | NewCombin Challenge</title>
                    <meta name="description" content="Generated by create-t3-app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className="container mx-auto flex flex-col justify-center p-4">
                    <div className="flex flex-col">
                        <div className="overflow-x-auto sm:-mx-6 lg:-mx-8">
                            <div className="py-2 inline-block min-w-full sm:px-6 lg:px-8">
                                <div className="overflow-hidden">
                                    <table className="min-w-full divide-y divide-gray-200">
                                        <thead>
                                            <tr>

                                                <th className="px-4 py-2">Barcode</th>
                                                <th className="px-4 py-2">Amount</th>
                                                <th className="px-4 py-2">Status</th>
                                                <th className="px-4 py-2">Expiration Date</th>
                                                <th className="px-4 py-2"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {payables.data.map((payable) => (
                                                <tr key={payable.id}>

                                                    <td className="border px-4 py-2">{payable.barcode}</td>
                                                    <td className="border px-4 py-2">${payable.amount}</td>
                                                    <td className="border px-4 py-2">{payable.status}</td>
                                                    <td className="border px-4 py-2">{
                                                        payable.expirationDate.toLocaleDateString(
                                                            'en-us', {
                                                            year: 'numeric',
                                                            month: 'long',
                                                            day: 'numeric'
                                                        }
                                                        )}
                                                    </td>
                                                    <td>
                                                        <div className="flex flex-row mx-4 justify-center">
                                                            <div>
                                                                <button className="
                                                                bg-blue-500 
                                                                hover:bg-blue-700 
                                                                text-white font-bold 
                                                                py-2 px-4 
                                                                rounded-md">
                                                                    <span className="absolute inset-y-0 left-0 flex items-center pl-3 text-amber-600">
                                                                    </span>
                                                                    <PencilIcon className="h-5 w-5" aria-hidden="true" />

                                                                </button>
                                                            </div>
                                                            <div className="ml-4">
                                                                <form onSubmit={onDelete}>
                                                                    <input value={payable.id} className="hidden" {...register("id", {})}></input>
                                                                    <button className="
                                                                        bg-red-500 
                                                                        hover:bg-red-700 
                                                                        text-white font-bold 
                                                                        py-2 px-4 
                                                                        rounded-md"
                                                                        type="submit"
                                                                    >


                                                                        <TrashIcon className="h-5 w-5" aria-hidden="true" />

                                                                    </button>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            ))}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </main>
            </>
        )
    } else {
        const payables = trpc.useQuery(["payables.getByTypeService", { typeService: filter }]);
        if (!payables.data?.length) {
            return (
                <>
                    <Head>
                        <title>Payables | NewCombin Challenge</title>
                        <meta name="description" content="Generated by create-t3-app" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>

                    <div className="flex justify-center items-center h-screen">
                        <div className="w-full max-w-md">

                            <div className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
                                <div className="mb-4">
                                    <h1 className="text-2xl font-bold text-center">
                                        No hay datos...
                                    </h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </>
            )

        }
        return (
            <>
                <Head>
                    <title>Payables | NewCombin Challenge</title>
                    <meta name="description" content="Generated by create-t3-app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <main className="container mx-auto flex flex-col justify-center p-4">
                    <div className="flex flex-col">
                        <div className="overflow-x-auto sm:-mx-6 lg:-mx-8">
                            <div className="py-2 inline-block min-w-full sm:px-6 lg:px-8">
                                <div className="overflow-hidden">
                                    <table className="min-w-full divide-y divide-gray-200">
                                        <thead>
                                            <tr>
                                                <th className="px-4 py-2">Service</th>
                                                <th className="px-4 py-2">Barcode</th>
                                                <th className="px-4 py-2">Amount</th>
                                                <th className="px-4 py-2">Status</th>
                                                <th className="px-4 py-2">Expiration Date</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {payables.data.map((payable) => (
                                                <tr key={payable.id}>
                                                    <td className="border px-4 py-2">{payable.typeService}</td>
                                                    <td className="border px-4 py-2">{payable.barcode}</td>
                                                    <td className="border px-4 py-2">${payable.amount}</td>
                                                    <td className="border px-4 py-2">{payable.status}</td>
                                                    <td className="border px-4 py-2">{
                                                        payable.expirationDate.toLocaleDateString(
                                                            'en-us', {
                                                            year: 'numeric',
                                                            month: 'long',
                                                            day: 'numeric'
                                                        }
                                                        )}
                                                        </td>
                                                </tr>
                                            ))}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </main>
            </>
        )
    }
}